---
import { formatYearsRangeString } from '@lib/helpers'
import WorkCard from '@components/WorkCard.astro'
import UserLayout from '@layouts/UserLayout.astro'
import {
  getComposerBySlug,
  type ComposerBySlug,
} from '@db/queries/composerBySlug'
import { getWorksByGenres, type WorksByGenres } from '@db/queries/worksByGenres'
import { dbConnect } from '@db/connect'

const { slug } = Astro.params
if (!slug) {
  return Astro.redirect('/404', 404)
}
let composer: ComposerBySlug
let genres: WorksByGenres
try {
  composer = await getComposerBySlug(dbConnect(), slug)
  genres = await getWorksByGenres(dbConnect(), composer.id)
} catch (e) {
  return Astro.redirect('/404', 404)
}

const yearsLived = formatYearsRangeString(composer.yearBorn, composer.yearDied)
---

<UserLayout title={`${composer.lastName} | Opus Classical`}>
  <div>
    <h1>{composer.firstName}&nbsp;{composer.lastName}</h1>
    <div class="w-full text-center mb-4">
      <span>{composer.countries}</span>
      <span class="vertical-separator"></span>
      <span>{yearsLived}</span>
      {
        composer.wikipediaLink && (
          <>
            <span class="vertical-separator" />
            <a href={composer.wikipediaLink}>Wikipedia</a>
          </>
        )
      }
      {
        composer.imslpLink && (
          <>
            <span class="vertical-separator" />
            <a href={composer.imslpLink}>IMSLP</a>
          </>
        )
      }
    </div>

    {
      genres?.map(genre => (
        <>
          <h2>{genre.genreName}</h2>
          <hr />
          <div class="flex flex-wrap mb-4">
            {genre.works.map(work => (
              <a href={`/composer/${composer.slug}/work/${work.id}`}>
                <WorkCard work={work} />
              </a>
            ))}
          </div>
        </>
      ))
    }
  </div>
</UserLayout>
